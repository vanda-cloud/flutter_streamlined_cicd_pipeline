name: Flutter Â» Streamlined CI/CD Pipeline
run-name: ${{ github.actor }} is publishing (${{ github.ref_name }}) ðŸš€

on:
  push:
    workflow_dispatch:
    pull_request:
    branches:
      - dev
      - production
jobs:
  analyze:
    name: Build and Analyze
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Flutter SDK
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2' # specify the correct version

      - name: Clean Flutter project
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Archive Flutter SDK
        # if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: flutter-sdk
          path: ~/.pub-cache

  test:
    name: 4 Automated Tests
    runs-on: macos-latest
    needs: analyze    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Flutter SDK
        uses: actions/download-artifact@v3
        with:
          name: flutter-sdk
          path: ~/.pub-cache

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2' # specify the correct version

      - name: Run tests
        run: flutter test

  build-android:
    name: Build Android
    runs-on: macos-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - name: Install dependencies
        run: flutter pub get

      # - name: Build Android
      #   run: flutter build apk --debug --split-per-abi

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: build-android
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - name: Install dependencies
        run: flutter pub get

      # - name: Build Android
      #   run: flutter build apk --debug --split-per-abi

  release:
    name: Release Apps
    runs-on: macos-latest
    needs: build-ios
    steps:
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/debug/*,build/ios/iphoneos/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.RELEASE_TOKEN }}

# jobs:
#   build:
#     name: Build & Release
#     runs-on: macos-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-java@v1
#         with:
#           java-version: '11'
#       - uses: subosito/flutter-action@v2
#         with:
#           flutter-version: '3.22.2'
#       - run: flutter pub get
#       - run: flutter test
#       - run: flutter build apk --debug --split-per-abi
#       - run: |
#           flutter build ios --no-codesign
#           cd build/ios/iphoneos
#           mkdir Payload
#           cd Payload
#           ln -s ../Runner.app
#           cd ..
#           zip -r app.ipa Payload
#       - name: Push to Releases
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "build/app/outputs/apk/debug/*,build/ios/iphoneos/app.ipa"
#           tag: v1.0.${{ github.run_number }}
#           token: ${{ secrets.RELEASE_TOKEN }}



# jobs:
#   analyze:
#     name: Build and Analyze
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Cache Flutter SDK
#         uses: actions/cache@v3
#         with:
#           path: ~/.pub-cache
#           key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: '3.22.2' # specify the correct version

#       - name: Clean Flutter project
#         run: flutter clean

#       - name: Install dependencies
#         run: flutter pub get

#       - name: Analyze
#         run: flutter analyze

#       - name: Run tests
#         run: flutter test

#   build-android:
#     name: Build Android
#     runs-on: ubuntu-latest
#     needs: analyze

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: '3.22.2' # specify the correct version

#       - name: Install dependencies
#         run: flutter pub get

#       - name: Build APK
#         run: flutter build apk --release

#       - name: Upload APK to artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: android-release-apk
#           path: build/app/outputs/flutter-apk/app-release.apk

#   # build-ios:
#   #   name: Build iOS
#   #   runs-on: macos-latest
#   #   needs: analyze

#   #   steps:
#   #     - name: Checkout repository
#   #       uses: actions/checkout@v3

#   #     - name: Set up Flutter
#   #       uses: subosito/flutter-action@v2
#   #       with:
#   #         flutter-version: '3.22.2' # specify the correct version

#   #     - name: Install dependencies
#   #       run: flutter pub get

#   #     - name: Set up Xcode
#   #       run: sudo xcode-select --switch /Applications/Xcode.app

#   #     - name: Build iOS
#   #       run: flutter build ios --release

#   #     - name: Upload IPA to artifacts
#   #       uses: actions/upload-artifact@v3
#   #       with:
#   #         name: ios-release-ipa
#   #         path: build/ios/ipa/release/*.ipa
